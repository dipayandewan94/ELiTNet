model:
  network:
    instance:
      _target_: models.networks.ElitNet.ElitNet
      in_channels: 3
      num_classes: 2
      layers:
      - 2
      - 4
      - 16
      kernel_sz: 3
      up_mode: up_conv
      conv_bridge: true
      shortcut: true
  loss:
    model:
      _target_: torch.nn.CrossEntropyLoss()
  optimizer:
    optim:
      _target_: torch.optim.Adam
      lr: 0.002
      weight_decay: 1.0e-05
    exclude_bias_from_wd: true
  lr_scheduler:
    _partial_: true
    _target_: utils.lr_scheduler.WarmupLR
    warmup_steps: 500
  name: ELiTNet
  val_metrics:
    _target_: metrics.seg_metrics.SegmentationMetrics
    num_classes: ${dataset.num_classes}
    class_names: ${dataset.class_names}
    ignore_index: ${dataset.ignore_index}
  test_metrics:
    _target_: metrics.seg_metrics.SegmentationMetrics
    num_classes: ${dataset.num_classes}
    class_names: ${dataset.class_names}
    ignore_index: ${dataset.ignore_index}
dataset:
  name: IDRiD
  global_batch_size: 2
  img_size: 512
  num_channels: 3
  num_classes: 5
  ignore_index: 0
  class_names:
  - EX
  - HE
  - MA
  - OD
  - SE
  train_dataset:
    _partial_: true
    _target_: data.data.IDRiD
    path: ${data_dir}/IDRiD/
    split: train
    train_length: 12
    date_aug_range: 2
  val_dataset:
    _partial_: true
    _target_: data.data.IDRiD
    path: ${data_dir}/IDRiD/
    split: val
  test_dataset:
    _partial_: true
    _target_: data.data.IDRiD
    path: ${data_dir}/IDRiD/
    split: test
accelerator:
  devices: 1
  num_workers: 8
  progress_bar_refresh_rate: 2
  sync_batchnorm: false
  accelerator: gpu
  precision: 16-mixed
  strategy: auto
  num_nodes: 1
datamodule:
  _target_: data.datamodule.SegDataModule
  train_dataset: ${dataset.train_dataset}
  val_dataset: ${dataset.val_dataset}
  test_dataset: ${dataset.test_dataset_out}
  global_batch_size: ${dataset.global_batch_size}
  num_workers: ${accelerator.num_workers}
  num_nodes: ${accelerator.num_nodes}
  num_devices: ${accelerator.devices}
trainer:
  _target_: pytorch_lightning.Trainer
  devices: ${accelerator.devices}
  accelerator: ${accelerator.accelerator}
  strategy: ${accelerator.strategy}
  num_nodes: ${accelerator.num_nodes}
  precision: ${accelerator.precision}
  max_epochs: 500
  check_val_every_n_epoch: 10
logger:
  _target_: pytorch_lightning.loggers.WandbLogger
  save_dir: ${root_dir}
  name: ${experiment_name}
  project: ELiTNet
  log_model: false
  offline: false
  entity: imaginelab
checkpoints:
  _target_: pytorch_lightning.callbacks.ModelCheckpoint
  dirpath: ${root_dir}/checkpoints/${experiment_name}
  filename: best_dice_ckpt
  monitor: val/miou
  save_last: true
  save_top_k: 1
  every_n_epochs: 1
  mode: max
  enable_version_counter: false
progress_bar:
  _target_: pytorch_lightning.callbacks.TQDMProgressBar
  refresh_rate: ${accelerator.progress_bar_refresh_rate}
data_dir: ${root_dir}/datasets
root_dir: ${hydra:runtime.cwd}
experiment_name: ${dataset.name}_${model.name}
mode: train
num_classes: ${dataset.num_classes}
